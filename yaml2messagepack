#!/usr/bin/env perl
#
# $Id: yaml2messagepack,v 1.3 2012/01/13 06:57:15 ryo Exp $
#
# Copyright(c) 2011 Ryo SHIMIZU <ryo@misakimix.org>
#

use strict;
use warnings;
use Data::MessagePack;
use Encode;
use Getopt::Std;
use LWP::Simple;
use YAML::Syck;
use YAML::XS;

sub usage {
	die <<__USAGE__;
usage: yaml2jmessagepack [options] [file ...]
	-x	use YAML::XS instead of YAML::Syck
	-q	quiet
__USAGE__
}

my %opts;
getopts('qx', \%opts) or usage();

if ($#ARGV >= 0) {
	for my $file (@ARGV) {
		print "== $file ==\n" if (($#ARGV > 0) && !exists($opts{q}));
		yaml2messagepack(scalar(fileread($file)));
	}
} else {
	my $file = join("", <>);
	yaml2messagepack($file);
}
exit;

sub yaml2messagepack {
	my $yaml = shift;

	my $data;
	if (exists $opts{x}) {
		$data = YAML::XS::Load($yaml);
	} else {
		$data = YAML::Syck::Load($yaml);
	}

	print Data::MessagePack->pack($data);
}

sub fileread {
	my $file = shift;

	if ($file =~ m#^(http|https|ftp)://#i) {
		my $yaml = get($file);
		unless (defined $yaml) {
			warn "$file: error\n";
			$yaml = '';
		}
		$yaml;
	} else {
		open my $fh, "< $file" or die "open: $file: $!\n";
		local $/;
		<$fh>;
	}
}
